<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://bymin0.github.io/</id><title>Min`s Blog</title><subtitle>hello</subtitle> <updated>2022-05-30T20:15:56+09:00</updated> <author> <name>bymin0</name> <uri>https://bymin0.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://bymin0.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://bymin0.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 bymin0 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Python - 라이브러리</title><link href="https://bymin0.github.io/posts/python_%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/" rel="alternate" type="text/html" title="Python - 라이브러리" /><published>2022-05-30T20:05:35+09:00</published> <updated>2022-05-30T20:15:36+09:00</updated> <id>https://bymin0.github.io/posts/python_%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/</id> <content src="https://bymin0.github.io/posts/python_%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC/" /> <author> <name>bymin0</name> </author> <category term="Language" /> <category term="Python" /> <summary> 라이브러리란? 필요한 코드들을 미리 만들어 저장한 함수 집합체 C언어의 #include &amp;lt;stdio.h&amp;gt;와 같이 라이브러리를 불러와서 사용할 수 있다. 라이브러리 사용하기 기본적으로 제공하고 있는 라이브러리 : 표준 라이브러리(3.10.4) 라이브러리 호출 : import library_name 라이브러리를 호출하지 않고 사용하는 함수(ex - len(), max(), int(), … )들은 내장함수라고 불린다. 라이브러리 설치 기본적으로 설치되어있는 라이브러리 이외에도 다른 라이브러리들이 존재한다. pypig.org에 파이썬에 설치 가능한 외장 라이브러리들의 정보가 있으니, 필요한 라이브러리이름을 찾을 수 있다. 예시) numpy라는 외장 ... </summary> </entry> <entry><title>Python - 유용한 함수, 함수 만들기</title><link href="https://bymin0.github.io/posts/python_%ED%95%A8%EC%88%98/" rel="alternate" type="text/html" title="Python - 유용한 함수, 함수 만들기" /><published>2022-05-30T15:00:00+09:00</published> <updated>2022-05-30T15:00:00+09:00</updated> <id>https://bymin0.github.io/posts/python_%ED%95%A8%EC%88%98/</id> <content src="https://bymin0.github.io/posts/python_%ED%95%A8%EC%88%98/" /> <author> <name>bymin0</name> </author> <category term="Language" /> <category term="Python" /> <summary> len() 리스트의 길이를 알 수 있는 함수 사용 예시) l = [1,2,3] s = 'hello' print('l의 길이: %d' %len(l)) # l의 길이: 3 print('s의 길이: %d' %len(s)) # s의 길이: 5 extend() 두 리스트를 합치는 함수 사용 예시) list1 = [1,2,3] list2 = [4,5,6] list1.extend(list2) print(list1) # [1,2,3,4,5,6] del 객체이름 객체를 지울 수 있는 함수 사용 예시) l = [1,2,3] dic = {1:100, 2:200} s = 'string' del l[1] print(l) # [1,3]... </summary> </entry> <entry><title>Python - 가상환경 만들기</title><link href="https://bymin0.github.io/posts/python_%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD/" rel="alternate" type="text/html" title="Python - 가상환경 만들기" /><published>2022-05-29T18:33:50+09:00</published> <updated>2022-05-29T19:03:25+09:00</updated> <id>https://bymin0.github.io/posts/python_%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD/</id> <content src="https://bymin0.github.io/posts/python_%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD/" /> <author> <name>bymin0</name> </author> <category term="Language" /> <category term="Python" /> <summary> 1. cmd 사용 win + R cmd cd &amp;lt;가상환경 만들 폴더 경로&amp;gt; python -m venv &amp;lt;가상환경이름&amp;gt; 가상환경이 만들어진 모습 2. Visual Studio Code(vs code) 사용 vs code 하단 cmd 창 열기 위의 사진과 같은 모양이 없다면 메뉴 중 새로운 터미널 생성 py -3 -m venv &amp;lt;가상환경이름&amp;gt; 가상환경이 만들어진 모습 3. 가상환경 실행(vs code) ctrl + shift + p Python:Select Interpreter (... </summary> </entry> <entry><title>Python - 제어문</title><link href="https://bymin0.github.io/posts/Python-%EC%A0%9C%EC%96%B4%EB%AC%B8/" rel="alternate" type="text/html" title="Python - 제어문" /><published>2022-05-29T16:07:22+09:00</published> <updated>2022-05-29T20:10:16+09:00</updated> <id>https://bymin0.github.io/posts/Python-%EC%A0%9C%EC%96%B4%EB%AC%B8/</id> <content src="https://bymin0.github.io/posts/Python-%EC%A0%9C%EC%96%B4%EB%AC%B8/" /> <author> <name>bymin0</name> </author> <category term="Language" /> <category term="Python" /> <summary> 조건문 if문 if condition : statement1 else : statement2 Python의 if문은 Tab이 중요하다. if문의 실행문이 두 개 이상일 경우, 실행문의 들여쓰기는 같아야 한다. if condition : statement1 statement2 statement3 # error! else : statement4 예시) if 1 == 0: print('true') else : print('false') 결과: false elif문 c, java의 else if문 if condition1 : statement1 elif condition2... </summary> </entry> <entry><title>Python - 기본 문법</title><link href="https://bymin0.github.io/posts/python_%EA%B8%B0%EB%B3%B8/" rel="alternate" type="text/html" title="Python - 기본 문법" /><published>2022-05-17T16:20:22+09:00</published> <updated>2022-05-17T16:39:12+09:00</updated> <id>https://bymin0.github.io/posts/python_%EA%B8%B0%EB%B3%B8/</id> <content src="https://bymin0.github.io/posts/python_%EA%B8%B0%EB%B3%B8/" /> <author> <name>bymin0</name> </author> <category term="Language" /> <category term="Python" /> <summary> 1. print() 함수 파이썬의 출력함수 사용법 print('Hello, World!') 2. 변수 파이썬은 C나 Java와 다르게 변수의 유형을 선언하지 않음 C, Java : int num = 0 Python : num = 0 변수 선언 n = 1 # 숫자형 s = 'hello' # 문자형 true = True # 불린형 l = [ 1, 'a', 5.2 ] # 리스트형 dic = { "key": "value" } # 딕셔너리형 bool True, False &amp;gt;&amp;gt; ★첫 글자는 무조건 대문자 list 한 가지 유형밖에 넣지 못하는 C... </summary> </entry> </feed>
